// Generated by CoffeeScript 2.2.1
var Request, Response, _, request, url;

request = require('request');

url = require('url');

_ = require('underscore');

Response = require('./response');

Request = (function() {
  class Request {
    constructor(module1, _request) {
      this.module = module1;
      this._request = _request;
      if (!this.module) {
        throw new Error('Requires Zoho Module');
      }
      if (!this._request) {
        throw new Error('Requires request');
      }
      return;
    }

    request(cb) {
      var chunks, options;
      options = _.pick(this._request, ['method']);
      options.uri = url.format(this._request);
      chunks = new Buffer('');
      return request(options, (error, response, body) => {
        if (error) {
          return cb(error, null);
        } else {
          if (/text\/xml/.test(response.headers['content-type'])) {
            this.response = new Response(response);
            return this.response.parseBody(body, cb);
          } else {
            this.response = new Response(response);
            return this.response.parseFile(chunks, cb);
          }
        }
      }).on('response', function(resp) {
        return resp.on('data', function(chunk) {
          return chunks = Buffer.concat([chunks, chunk]);
        });
      });
    }

  };

  Request.prototype.response = null;

  return Request;

}).call(this);

module.exports = Request;
